"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/contexts/FirebaseAuthContext.tsx":
/*!**********************************************!*\
  !*** ./src/contexts/FirebaseAuthContext.tsx ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FirebaseAuthProvider: function() { return /* binding */ FirebaseAuthProvider; },\n/* harmony export */   useFirebaseAuth: function() { return /* binding */ useFirebaseAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/firebaseAuth */ \"./src/lib/firebaseAuth.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst FirebaseAuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useFirebaseAuth = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(FirebaseAuthContext);\n    if (context === undefined) {\n        throw new Error(\"useFirebaseAuth must be used within a FirebaseAuthProvider\");\n    }\n    return context;\n};\n_s(useFirebaseAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst FirebaseAuthProvider = (param)=>{\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Check authentication status\n    const checkAuthStatus = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        // Only run on client side to prevent hydration issues\n        if (false) {}\n        try {\n            console.log(\"\\uD83D\\uDD0D FirebaseAuthContext: Checking authentication status...\");\n            // Firebase Auth automatically handles auth state, so we just need to wait for it\n            // The onAuthStateChanged listener will handle setting the user\n            setLoading(false);\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Auth check error:\", error);\n            setUser(null);\n            setError(\"Authentication error. Please log in again.\");\n            setLoading(false);\n        }\n    }, []);\n    // Clear error\n    const clearError = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setError(null);\n    }, []);\n    // Set client flag on mount to prevent hydration issues\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setIsClient(true);\n    }, []);\n    // Set up Firebase Auth state listener\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isClient) return;\n        const unsubscribe = _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.onAuthStateChanged((firebaseUser)=>{\n            console.log(\"\\uD83D\\uDD04 FirebaseAuthContext: Auth state changed:\", (firebaseUser === null || firebaseUser === void 0 ? void 0 : firebaseUser.email) || \"No user\");\n            setUser(firebaseUser);\n            setError(null);\n            setLoading(false);\n        });\n        return ()=>unsubscribe();\n    }, [\n        isClient\n    ]);\n    // Watch for authentication state changes and handle navigation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isClient) return;\n        // If user becomes unauthenticated, redirect to appropriate page\n        if (!user && !loading) {\n            const currentPath = router.pathname;\n            // Don't redirect if already on login/register pages or public pages\n            const publicPaths = [\n                \"/login\",\n                \"/register\",\n                \"/\",\n                \"/landing\",\n                \"/about\",\n                \"/afri-sage\",\n                \"/community\",\n                \"/courses\",\n                \"/category\"\n            ];\n            const isPublicPath = publicPaths.some((path)=>currentPath === path || currentPath.startsWith(path));\n            if (!isPublicPath) {\n                console.log(\"\\uD83D\\uDEAA FirebaseAuthContext: User logged out, redirecting from\", currentPath);\n                // Show a brief notification to the user\n                if (true) {\n                    const notification = document.createElement(\"div\");\n                    notification.style.cssText = \"\\n            position: fixed;\\n            top: 20px;\\n            right: 20px;\\n            background: #dc2626;\\n            color: white;\\n            padding: 12px 20px;\\n            border-radius: 8px;\\n            z-index: 9999;\\n            font-family: system-ui, sans-serif;\\n            font-size: 14px;\\n            box-shadow: 0 4px 12px rgba(0,0,0,0.3);\\n            animation: slideIn 0.3s ease-out;\\n          \";\n                    notification.textContent = \"Session expired. Redirecting to login...\";\n                    document.body.appendChild(notification);\n                    setTimeout(()=>{\n                        if (notification.parentNode) {\n                            notification.parentNode.removeChild(notification);\n                        }\n                    }, 3000);\n                }\n                // Redirect to login page, preserving the current path for post-login redirect\n                router.push({\n                    pathname: \"/login\",\n                    query: {\n                        redirect: currentPath\n                    }\n                });\n            }\n        }\n    }, [\n        user,\n        loading,\n        isClient,\n        router\n    ]);\n    const signIn = async (credentials)=>{\n        try {\n            setLoading(true);\n            setError(null);\n            console.log(\"\\uD83D\\uDD10 FirebaseAuthContext: Signing in...\");\n            // Validate credentials before sending\n            if (!credentials.email || !credentials.password) {\n                throw new Error(\"Email and password are required\");\n            }\n            if (!credentials.email.includes(\"@\")) {\n                throw new Error(\"Please enter a valid email address\");\n            }\n            await _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.signIn(credentials);\n            console.log(\"✅ FirebaseAuthContext: Sign in successful\");\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Sign in error:\", error);\n            // Handle specific error types\n            let errorMessage = \"Sign in failed\";\n            if (error instanceof _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.FirebaseAuthError) {\n                errorMessage = error.message;\n            } else if (error instanceof Error) {\n                if (error.message.includes(\"Network\") || error.message.includes(\"fetch\")) {\n                    errorMessage = \"Network error. Please check your connection.\";\n                } else if (error.message.includes(\"user-not-found\")) {\n                    errorMessage = \"No account found with this email address.\";\n                } else if (error.message.includes(\"wrong-password\")) {\n                    errorMessage = \"Incorrect password.\";\n                } else if (error.message.includes(\"too-many-requests\")) {\n                    errorMessage = \"Too many failed attempts. Please try again later.\";\n                } else {\n                    errorMessage = error.message;\n                }\n            }\n            setError(errorMessage);\n            throw error;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signUp = async (data)=>{\n        try {\n            setLoading(true);\n            setError(null);\n            console.log(\"\\uD83D\\uDCDD FirebaseAuthContext: Signing up...\");\n            await _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.signUp(data);\n            console.log(\"✅ FirebaseAuthContext: Sign up successful\");\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Sign up error:\", error);\n            // Enhanced error handling for registration\n            let errorMessage = \"Sign up failed\";\n            if (error instanceof _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.FirebaseAuthError) {\n                errorMessage = error.message;\n            } else if (error instanceof Error) {\n                if (error.message.includes(\"email-already-in-use\")) {\n                    errorMessage = \"This email is already registered. Please try logging in instead.\";\n                } else if (error.message.includes(\"weak-password\")) {\n                    errorMessage = \"Password should be at least 6 characters.\";\n                } else if (error.message.includes(\"invalid-email\")) {\n                    errorMessage = \"Please enter a valid email address.\";\n                } else if (error.message.includes(\"Network\") || error.message.includes(\"fetch\")) {\n                    errorMessage = \"Network error. Please check your connection.\";\n                } else {\n                    errorMessage = error.message;\n                }\n            }\n            setError(errorMessage);\n            throw error;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signInWithGoogle = async ()=>{\n        try {\n            setLoading(true);\n            setError(null);\n            console.log(\"\\uD83D\\uDD10 FirebaseAuthContext: Signing in with Google...\");\n            await _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.signInWithGoogle();\n            console.log(\"✅ FirebaseAuthContext: Google sign in successful\");\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Google sign in error:\", error);\n            let errorMessage = \"Google sign in failed\";\n            if (error instanceof _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.FirebaseAuthError) {\n                errorMessage = error.message;\n            } else if (error instanceof Error) {\n                if (error.message.includes(\"popup-closed\")) {\n                    errorMessage = \"Sign in was cancelled.\";\n                } else if (error.message.includes(\"popup-blocked\")) {\n                    errorMessage = \"Popup was blocked. Please allow popups and try again.\";\n                } else {\n                    errorMessage = error.message;\n                }\n            }\n            setError(errorMessage);\n            throw error;\n        } finally{\n            setLoading(false);\n        }\n    };\n    const signOut = async ()=>{\n        try {\n            console.log(\"\\uD83D\\uDEAA FirebaseAuthContext: Signing out...\");\n            await _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.signOut();\n            setUser(null);\n            setError(null);\n            console.log(\"✅ FirebaseAuthContext: Sign out successful\");\n            // Redirect to home page after logout\n            router.push(\"/\");\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Sign out error:\", error);\n            // Even if logout fails, clear local state\n            setUser(null);\n            setError(null);\n            // Still redirect even if logout fails\n            router.push(\"/\");\n        }\n    };\n    const updateProfile = async (profileData)=>{\n        try {\n            setError(null);\n            console.log(\"\\uD83D\\uDD04 FirebaseAuthContext: Updating profile with data:\", profileData);\n            const updatedUser = await _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.updateProfile(profileData);\n            console.log(\"✅ FirebaseAuthContext: Profile updated, new user data:\", updatedUser);\n            // Update the user state with the new data\n            setUser(updatedUser);\n            console.log(\"✅ FirebaseAuthContext: User state updated with onboarding_completed:\", updatedUser.onboarding_completed);\n            return updatedUser;\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Profile update error:\", error);\n            setError(error instanceof Error ? error.message : \"Profile update failed\");\n            throw error;\n        }\n    };\n    const resetPassword = async (email)=>{\n        try {\n            setError(null);\n            console.log(\"\\uD83D\\uDD04 FirebaseAuthContext: Sending password reset email...\");\n            await _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.resetPassword(email);\n            console.log(\"✅ FirebaseAuthContext: Password reset email sent\");\n        } catch (error) {\n            console.error(\"❌ FirebaseAuthContext: Password reset error:\", error);\n            let errorMessage = \"Password reset failed\";\n            if (error instanceof _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.FirebaseAuthError) {\n                errorMessage = error.message;\n            } else if (error instanceof Error) {\n                if (error.message.includes(\"user-not-found\")) {\n                    errorMessage = \"No account found with this email address.\";\n                } else if (error.message.includes(\"invalid-email\")) {\n                    errorMessage = \"Please enter a valid email address.\";\n                } else {\n                    errorMessage = error.message;\n                }\n            }\n            setError(errorMessage);\n            throw error;\n        }\n    };\n    const value = {\n        user,\n        profile: user,\n        loading: loading || !isClient,\n        isAuthenticated: !!user,\n        isAdmin: _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.isAdmin(user),\n        isSuperAdmin: _lib_firebaseAuth__WEBPACK_IMPORTED_MODULE_3__.firebaseAuthService.isSuperAdmin(user),\n        error,\n        signIn,\n        signUp,\n        signInWithGoogle,\n        signOut,\n        updateProfile,\n        resetPassword,\n        clearError,\n        checkAuthStatus\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FirebaseAuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"Y:\\\\fowardafrica-main\\\\src\\\\contexts\\\\FirebaseAuthContext.tsx\",\n        lineNumber: 350,\n        columnNumber: 5\n    }, undefined);\n};\n_s1(FirebaseAuthProvider, \"VOed3db0vBJQsmjXIcuZqO3B4h0=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = FirebaseAuthProvider;\nvar _c;\n$RefreshReg$(_c, \"FirebaseAuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contexts/FirebaseAuthContext.tsx\n"));

/***/ })

});